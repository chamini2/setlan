program {
	using
		set x, y, z;
	in
		x = {1,2} <+> 2;
		y = 2 <*> {2,4};
		z = 2 <-> {3,6};

		x = x </> 2;
		y = z <%> 2;

		y = x ++ y;
		x = x >< z;
		z = x / y;
}

# token PROGRAM       value (program) at line 1, column 1
# token LCURLY        value ({) at line 1, column 9
# token USING         value (using) at line 2, column 2
# token SET           value (set) at line 3, column 3
# token IDENTIFIER    value (x) at line 3, column 7
# token COMMA         value (,) at line 3, column 8
# token IDENTIFIER    value (y) at line 3, column 10
# token COMMA         value (,) at line 3, column 11
# token IDENTIFIER    value (z) at line 3, column 13
# token SEMICOLON     value (;) at line 3, column 14
# token IN            value (in) at line 4, column 2
# token IDENTIFIER    value (x) at line 5, column 3
# token ASSIGN        value (=) at line 5, column 5
# token LCURLY        value ({) at line 5, column 7
# token INTEGER       value (1) at line 5, column 8
# token COMMA         value (,) at line 5, column 9
# token INTEGER       value (2) at line 5, column 10
# token RCURLY        value (}) at line 5, column 11
# token SPLUS         value (<+>) at line 5, column 13
# token INTEGER       value (2) at line 5, column 17
# token SEMICOLON     value (;) at line 5, column 18
# token IDENTIFIER    value (y) at line 6, column 3
# token ASSIGN        value (=) at line 6, column 5
# token INTEGER       value (2) at line 6, column 7
# token STIMES        value (<*>) at line 6, column 9
# token LCURLY        value ({) at line 6, column 13
# token INTEGER       value (2) at line 6, column 14
# token COMMA         value (,) at line 6, column 15
# token INTEGER       value (4) at line 6, column 16
# token RCURLY        value (}) at line 6, column 17
# token SEMICOLON     value (;) at line 6, column 18
# token IDENTIFIER    value (z) at line 7, column 3
# token ASSIGN        value (=) at line 7, column 5
# token INTEGER       value (2) at line 7, column 7
# token SMINUS        value (<->) at line 7, column 9
# token LCURLY        value ({) at line 7, column 13
# token INTEGER       value (3) at line 7, column 14
# token COMMA         value (,) at line 7, column 15
# token INTEGER       value (6) at line 7, column 16
# token RCURLY        value (}) at line 7, column 17
# token SEMICOLON     value (;) at line 7, column 18
# token IDENTIFIER    value (x) at line 9, column 3
# token ASSIGN        value (=) at line 9, column 5
# token IDENTIFIER    value (x) at line 9, column 7
# token SDIVIDE       value (</>) at line 9, column 9
# token INTEGER       value (2) at line 9, column 13
# token SEMICOLON     value (;) at line 9, column 14
# token IDENTIFIER    value (y) at line 10, column 3
# token ASSIGN        value (=) at line 10, column 5
# token IDENTIFIER    value (z) at line 10, column 7
# token SMODULO       value (<%>) at line 10, column 9
# token INTEGER       value (2) at line 10, column 13
# token SEMICOLON     value (;) at line 10, column 14
# token IDENTIFIER    value (y) at line 12, column 3
# token ASSIGN        value (=) at line 12, column 5
# token IDENTIFIER    value (x) at line 12, column 7
# token UNION         value (++) at line 12, column 9
# token IDENTIFIER    value (y) at line 12, column 12
# token SEMICOLON     value (;) at line 12, column 13
# token IDENTIFIER    value (x) at line 13, column 3
# token ASSIGN        value (=) at line 13, column 5
# token IDENTIFIER    value (x) at line 13, column 7
# token INTERSECTION  value (><) at line 13, column 9
# token IDENTIFIER    value (z) at line 13, column 12
# token SEMICOLON     value (;) at line 13, column 13
# token IDENTIFIER    value (z) at line 14, column 3
# token ASSIGN        value (=) at line 14, column 5
# token IDENTIFIER    value (x) at line 14, column 7
# token DIFFERENCE    value (\) at line 14, column 9
# token IDENTIFIER    value (y) at line 14, column 11
# token SEMICOLON     value (;) at line 14, column 12
# token RCURLY        value (}) at line 15, column 1
