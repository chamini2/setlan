# Gramatica para el Parser de SetLan
#
# Autores: Jonnathan Ng     11-10199
#          Manuel Gonzalez  11-10390
# Grupo 13

simbolo de partida = PROGRAM

PROGRAM -> 'program' STATEMENT

STATEMENT -> IDENTIFIER '=' EXPRESSION 
           | '{' DECLARE STATEMENT_LIST '}' 
           | 'scan' 'identifier'
           | 'print' COMMA_LIST
           | 'println' COMMA_LIST
           | 'if' '('EXPRESSION')' STATEMENT 'else' STATEMENT
           | 'if' '('EXPRESSION')' STATEMENT
           | 'for' 'identifier' DIRECTION EXPRESSION 'do' STATEMENT
           | 'repeat' STATEMENT 'while' '('EXPRESSION')' 'do' STATEMENT
           | 'while' '('EXPRESSION')' 'do' STATEMENT
           | 'repeat' STATEMENT 'while' '('EXPRESSION')'
                       
EXPRESSION -> 'integer'
            | 'false'
            | 'true'
            | 'string'
            | 'identifier'
            | '(' EXPRESSION ')'
            | '{' COMMA_LIST '}'
            | EXPRESSION '+' EXPRESSION            
            | EXPRESSION '-' EXPRESSION             
            | EXPRESSION '*' EXPRESSION            
            | EXPRESSION '/' EXPRESSION            
            | EXPRESSION '%' EXPRESSION            
            | '-'EXPRESSION
            | EXPRESSION '==' EXPRESSION
            | EXPRESSION '/=' EXPRESSION
            | EXPRESSION '<' EXPRESSION
            | EXPRESSION '<=' EXPRESSION
            | EXPRESSION '>' EXPRESSION
            | EXPRESSION '>=' EXPRESSION
            | EXPRESSION 'and' EXPRESSION
            | EXPRESSION 'or' EXPRESSION
            | 'not' EXPRESSION
            | EXPRESSION '@' EXPRESSION
            | EXPRESSION '++' EXPRESSION
            | EXPRESSION '\' EXPRESSION
            | EXPRESSION '><' EXPRESSION
            | EXPRESSION '<+>' EXPRESSION
            | EXPRESSION '<->' EXPRESSION
            | EXPRESSION '<*>' EXPRESSION
            | EXPRESSION '</>' EXPRESSION
            | EXPRESSION '<%>' EXPRESSION
            | >? EXPRESSION
            | <? EXPRESSION
            | $? EXPRESSION
            
DECLARE -> 'using' DECLARE_LIST 'in'
         |  EMPTY
         
DECLARE_LIST -> TYPE IDENTIFIER_LIST; DECLARE_LIST
              | EMPTY
              
IDENTIFIER_LIST -> 'identifier'
                 | 'identifier', IDENTIFIER_LIST
			  
STATEMENT_LIST -> STATEMENT ; STATEMENT_LIST
                | EMPTY
                
SET -> COMMA_LIST
     | EMPTY

COMMA_LIST -> EXPRESSION
            | EXPRESSION ',' COMMA_LIST
            
DIRECTION -> 'min'
           | 'max'

TYPE -> 'int'
      | 'bool'
      | 'set'
