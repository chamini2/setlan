--------------------------------------------------------------------------------
--------------------------------------------------------------------------------                                                                               
                                    SETLAN                                      
				    Etapa 1
			   Analizador Lexicográfico
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Autores
-------
11-10097 Gustavo Benzecri
11-10500 David Klie


Última modificación
-------------------
23 de enero de 2015


Descripción del programa
------------------------
Primera etapa de desarrollo del interpretador para el lenguaje Setlan, 
implementación del analizador lexicográfico. Siguiendo las especificaciones de 
la definición del lenguaje se identifican los tokens relevantes, se reconocen 
con expresiones regulares y se implanta el analizador utilizando la 
herramienta PLY (Python Lex-Yacc) para Python.


Ejecución
---------
Windows:
1. Extraer todos los archivos de setlan.tar.gz en un directorio
2. Renombrar el ejecutable como setlan.py
3. Cambiar al directorio donde se encuentra el programa
4. Ejecutar el programa con el comando 'python setlan.py <fuente.stl>'

Linux:
1. Extraer todos los archivos de setlan.tar.gz en un directorio
2. Cambiar al directorio donde fueron extraidos los archivos
3. Ejecutar el comando 'chmod +x setlan' para otorgarle permiso de ejecución
4. Ejecutar el programa con el comando './setlan <fuente.stl>'


Decisiones de implementación
----------------------------
- Se realiza un cheque de argumentos al principio del main para verificar si existe
un archivo fuente.
- La salida del t_error fue redireccionada a la salida de error. Sólo sale por
ahí si es llamada la función t_error.


Estado actual del proyecto
--------------------------
El lexer fue implementado exitosamente. Se realizaron un total de 20 pruebas 
normales y de casos frontera para verificar que funcione bien y que reconozca 
correctamente todo el lenguaje.


Problemas presentes
-------------------
- No se encontraron problemas


Changelog
---------
2015-1-21  David Klie  <mangok543@gmail.com>

    * setlan.py: Primer avance de Setlan
    	- Definición de los tokens
	- Definición de las palabras reservadas
	- Implementación de las funciones de reconocimiento complejas
	- Definición de las líneas ignoradas y el reconocimiento de errores

2015-1-21  Gustavo Benzecri  <gebenzecri@gmail.com>

    * setlan.py: Versión funcional
	- Implementación de las funciones de reconocimiento complejas
	- Lectura de un archivo fuente para hacerle un análisis lexicográfico
	
2015-1-22  David Klie  <mangok543@gmail.com>

    * setlan.py: Modificación de detalles
	- Redireccionamente de las salida estándar a la salida de error
	- Implementación del chequeo de argumentos de entrada
	
2015-1-22  Gustavo Benzecri <gebenzecri@gmail.com>

    * setlan.py: Versión totalmente funcional
    - Mejora de las expresiones regulares para mejor reconocimiento
	- Pruebas extensivas con varios códigos fuentes
	- Corrección de bugs en las funciones
	
2015-1-22  David Klie <mangok543@gmail.com>
    
	* setlan.py: Ejecución de casos de prueba
	- Pruebas extensivas con varios códigos fuentes
	- Corrección de bugs en las funciones
	
2015-1-23  Gustavo Benzecri <gebenzecri@gmail.com>
    
	* setlan.py: Ejecución de casos de prueba y documentación
	- Refactorización de algunos elementos del código
	- Realización de pruebas de regresión
	- Documentación del programa y elaboración del LEÉME

2015-1-23  David Klie <mangok543@gmail.com>
    
	* setlan.py: Refactorización y más casos de prueba
	- Refactorización del código para adaptarse al formato de la entrega
	- Se probró con 3 casos de prueba más

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
