Gramatica para el Lenguaje de Programacion Setlan

simbolo inicial: PROGRAM

'id'     = [A-Za-z_][A-Za-z0-9_]*
'number' = \d+
'string' = \"([^\"\\\n]|\\\\|\\"|\\t|\\r|\\s|\\r|\\f|\\b|\\a)*\"


PROGRAM -> 'program' STATEMENT
         | 'program' BLOCK
         
BLOCK -> '{' USING BLOCK_STATEMENT '}'

USING -> 'using' DECLARATION 'in'
       | empty
       
DECLARATION -> TYPE IDENTIFIER_LIST ';' DECLARATION
             | empty

IDENTIFIER_LIST -> 'id' ',' IDENTIFIER_LIST
                 | 'id'
                 
TYPE -> 'int'
      | 'bool'
      | 'set'
    
BLOCK_STATEMENT -> STATEMENT ';' BLOCK_STATEMENT
                |  empty
              
STATEMENT -> 'id' '=' EXPRESSION
           | 'scan' 'id'
           | PRINT
           | IF
           | FOR
           | repeat_while_do

SET_ELEMENT -> EXPRESSION ',' SET_ELEMENT
             | EXPRESSION
             | empty
           
EXPRESSION -> 'id'
            | '(' EXPRESSION ')'
            | EXPRESSION '++' EXPRESSION
            | EXPRESSION '><' EXPRESSION
            | EXPRESSION '\' EXPRESSION
            | EXPRESSION '<+>' EXPRESSION
            | EXPRESSION '<->' EXPRESSION
            | EXPRESSION '<*>' EXPRESSION
            | EXPRESSION '</>' EXPRESSION
            | EXPRESSION '<%>' EXPRESSION
            | '{' SET_ELEMENT '}'
            | EXPRESSION '+' EXPRESSION
            | EXPRESSION '-' EXPRESSION
            | EXPRESSION '*' EXPRESSION
            | EXPRESSION '/' EXPRESSION
            | EXPRESSION '%' EXPRESSION
            | '-' EXPRESSION
            | INTEGER
            | EXPRESSION '>' EXPRESSION
            | EXPRESSION '<' EXPRESSION
            | EXPRESSION '>=' EXPRESSION
            | EXPRESSION '<=' EXPRESSION
            | EXPRESSION '==' EXPRESSION
            | EXPRESSION '!=' EXPRESSION
            | EXPRESSION 'and' EXPRESSION
            | EXPRESSION 'or' EXPRESSION
            | EXPRESSION '@' EXPRESSION
            | 'not' EXPRESSION
            | 'true'
            | 'false'
            
PRINT -> 'print' VALUES
       | 'println' VALUES
       
VALUES -> 'string' ',' VALUES
        | EXPRESSION ',' VALUES
        | 'string'
        | EXPRESSION

IF -> 'if' '(' EXPRESSION ')' STATEMENT
      | 'if' '(' EXPRESSION ')' BLOCK
      | 'if' '(' EXPRESSION ')' STATEMENT ELSE
      | 'if' '(' EXPRESSION ')' BLOCK ELSE
    
ELSE -> 'else' BLOCK
      | 'else' STATEMENT
      
FOR -> 'for' 'id' 'min' EXPRESSION DO
     | 'for' 'id' 'max' EXPRESSION DO

REPEAT -> 'repeat' STATEMENT
        | 'repeat' BLOCK
     
WHILE -> 'while' '(' EXPRESSION ')'

DO -> 'do' STATEMENT
    | 'do' BLOCK
    
REPEAT_WHILE_DO -> REPEAT WHILE DO
                 | REPEAT WHILE
                 | WHILE DO
                    
                