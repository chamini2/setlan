##############################################################################################
#----------------------------------GRAMATICA DE SETLAN---------------------------------------#
##############################################################################################

#EMMANUEL DE AGUIAR  10-10179
#DANIEL PELAYO       10-10539

programa   ->   TokenProgram Instruccion

Instruccion   ->	Asignacion
              	  	| Bloque
              		| Entrada
   	       		    | Salida
            		| Condicional
            		| CicloFor
            		| CicloIndeterminado

Asignacion 	  -> 	TokenID TokenAsignacion Expresion

Bloque 		  -> 	TokenLlaveIzq ListaInstruccion TokenLlaveDer
   					| TokenLlaveIzq TokenUsing ListaDeclaracion TokenIn ListaInstruccion TokenLlaveDer

ListaInstruccion ->   Instruccion TokenPuntoComa
                 	  | Instruccion TokenPuntoComa ListaInstruccion

ListaDeclaracion ->  tipo listaVariables TokenPuntoComa
                 	 | tipo listaVariables TokenPuntoComa ListaDeclaracion

listaVariables   ->  TokenID
                     | TokenID TokenComa listaVariables

tipo    ->   TokenInt
             | TokenBool
             | TokenSet

CicloFor  ->   TokenFor TokenID TokenMax Expresion TokenDo Instruccion
               | TokenFor TokenID TokenMin Expresion TokenDo Instruccion

CicloIndeterminado   ->   TokenWhile Expresion TokenDo Instruccion
                          | TokenRepeat Instruccion TokenWhile Expresion
                          | TokenRepeat Instruccion TokenWhile Expresion TokenDo Instruccion

Condicional   ->   TokenIf Expresion Instruccion
                   | TokenIf Expresion Instruccion TokenElse Instruccio

Entrada    ->   TokenScan TokenID

Salida    ->    TokenPrint listaExpresiones
                | TokenPrintLn listaExpresiones

listaExpresiones   ->   Expresion
                        | Expresion TokenComa listaExpresiones

Expresion   ->   TokenNumero
	          	| TokenLlaveIzq elementos TokenLlaveDer
	          	| TokenTrue
   	            | TokenFalse
	            | TokenID
	            | TokenString
	            | TokenParentesisIzq Expresion TokenParentesisDer
	            | Expresion TokenMas   Expresion
	            | Expresion TokenMenos  Expresion
	            | Expresion TokenMult  Expresion
	            | Expresion TokenDiv Expresion
	            | Expresion TokenResto Expresion
	            | Expresion TokenMas   Expresion
	            | Expresion TokenMenos  Expresion
	            | Expresion TokenMult  Expresion
	            | Expresion TokenDiv Expresion
	            | Expresion TokenResto Expresion
	            | TokenMenos Expresion %prec TokenMenosU
	            | Expresion TokenUnion Expresion
	            | Expresion TokenIntersec Expresion
	            | Expresion TokenDif Expresion
	            | Expresion TokenMapMas Expresion
	            | Expresion TokenMapMenos Expresion
	            | Expresion TokenMapMult Expresion
	            | Expresion TokenMapDiv Expresion
	            | Expresion TokenMapResto Expresion
	            | TokenValorMax Expresion
	            | TokenValorMin Expresion
	            | TokenNumElem Expresion
	            | Expresion TokenAnd   Expresion
	            | Expresion TokenOr  Expresion
	            | TokenNot Expresion
	            | Expresion TokenMenor Expresion
	            | Expresion TokenMenorIgual  Expresion
	            | Expresion TokenMayor Expresion
	            | Expresion TokenMayorIgual Expresion
	            | Expresion TokenEquivalente Expresion
	            | Expresion TokenDesigual Expresion
	            | Expresion TokenContencion Expresion

/* Esta regla se esta utilizando para crear conjuntos, por que no mejor crear
 * una regla para los conjuntos y luego se nombrara en las reglas de
 * 'expresion'.
 */
elementos  ->  TokenNumero
               | elementos TokenComa TokenNumero


